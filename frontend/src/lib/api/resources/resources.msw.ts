/**
 * Generated by orval v6.6.4 🍺
 * Do not edit manually.
 * Iamus API
 * This is a REST API for interfacing with Iamus. This API provides endpoints for interacting with user information, submissions, and reviews.
 * OpenAPI spec version: 1.0.0
 */
import { SuccessStatus } from '.././models';
import faker from 'faker';
import { rest } from 'msw';

export const getPostResourceUploadUsernameMock = () => ({
    status: faker.helpers.randomize(Object.values(SuccessStatus)),
    user: {
        id: faker.random.word(),
        email: faker.random.word(),
        username: faker.random.word(),
        role: faker.helpers.randomize(['default', 'moderator', 'administrator']),
        name: faker.helpers.randomize([faker.random.word(), undefined]),
        createdAt: faker.datatype.number(),
        profilePictureUrl: faker.helpers.randomize([faker.random.word(), undefined]),
        status: faker.helpers.randomize([faker.random.word(), undefined]),
        about: faker.helpers.randomize([faker.random.word(), undefined]),
    },
});

export const getPostResourceUploadPublicationIdMock = () => ({
    status: faker.helpers.randomize(Object.values(SuccessStatus)),
});

export const getPostResourceUploadReviewIdMock = () => ({
    status: faker.helpers.randomize(Object.values(SuccessStatus)),
});

export const getResourcesMSW = () => [
    rest.post('*/resource/upload/:username', (_req, res, ctx) => {
        return res(ctx.delay(1000), ctx.status(200, 'Mocked status'), ctx.json(getPostResourceUploadUsernameMock()));
    }),
    rest.post('*/resource/upload/publication/:id', (_req, res, ctx) => {
        return res(
            ctx.delay(1000),
            ctx.status(200, 'Mocked status'),
            ctx.json(getPostResourceUploadPublicationIdMock()),
        );
    }),
    rest.post('*/resource/upload/review/:id', (_req, res, ctx) => {
        return res(ctx.delay(1000), ctx.status(200, 'Mocked status'), ctx.json(getPostResourceUploadReviewIdMock()));
    }),
];
