/**
 * Generated by orval v6.2.3 🍺
 * Do not edit manually.
 * Iamus API
 * This is a REST API for interfacing with Iamus. This API provides endpoints for interacting with user information, submissions, and reviews.
 * OpenAPI spec version: 1.0.0
 */
import { rest } from 'msw';
import faker from 'faker';

export const getPostSgSsoLoginMock = () => ({
    refreshToken: faker.random.word(),
    status: faker.helpers.randomize([faker.datatype.boolean(), undefined]),
    token: faker.random.word(),
    user: {
        about: faker.helpers.randomize([faker.random.word(), undefined]),
        email: faker.random.word(),
        firstName: faker.random.word(),
        id: faker.random.word(),
        lastName: faker.random.word(),
        profilePictureUrl: faker.helpers.randomize([faker.random.word(), undefined]),
        status: faker.helpers.randomize([faker.random.word(), undefined]),
        username: faker.random.word(),
    },
});

export const getPostSgSsoVerifyMock = () => ({
    message: faker.random.word(),
    status: faker.helpers.randomize(['ok', 'error']),
});

export const getExternalMSW = () => [
    rest.post('*/sg/sso/callback', (req, res, ctx) => {
        return res(ctx.delay(1000), ctx.status(200, 'Mocked status'));
    }),
    rest.post('*/sg/sso/login', (req, res, ctx) => {
        return res(ctx.delay(1000), ctx.status(200, 'Mocked status'), ctx.json(getPostSgSsoLoginMock()));
    }),
    rest.post('*/sg/sso/verify', (req, res, ctx) => {
        return res(ctx.delay(1000), ctx.status(200, 'Mocked status'), ctx.json(getPostSgSsoVerifyMock()));
    }),
];
